# use screen's ctrl+a
unbind C-b
set -g prefix C-a

# fix bol ctrl-a a
bind a send-prefix

# vi mode
set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r Left resize-pane -L
bind -r Down resize-pane -D
bind -r Up resize-pane -U
bind -r Right resize-pane -R

# slow roll helper
bind -r ^N next-window
bind -r ^N next-window

# bind reload config
unbind r
bind r source-file ~/.tmux.conf

# reset-ish
bind R refresh-client

# colors
set -g default-terminal "screen-256color"

# unicode
setw -g utf8 on
set -g status-utf8 on

# scollback
set -g history-limit 10000

# statusbar
# set -g status-right "#[fg=yellow] #h [ #(cut -d ' ' -f 1-3 /proc/loadavg) ]"
set -g status-right "#[fg=yellow] #h [ #(uptime | cut -d, -f 4 | cut -d: -f2 | sed 's/^ //g') ]"
set -g status-fg yellow
set -g status-bg default

# solid grey pane borders
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# toggle status bar
bind / set -g status

# toggle mouse mode (tmux 2.1)
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

# toggle mouse mode (tmux 1.8)
# bind m \
#     set -g mode-mouse on \;\
#     set -g mouse-resize-pane on \;\
#     set -g mouse-select-pane on \;\
#     set -g mouse-select-window on \;\
#     display 'Mouse: ON'
# bind M \
#     set -g mode-mouse off \;\
#     set -g mouse-resize-pane off \;\
#     set -g mouse-select-pane off \;\
#     set -g mouse-select-window off \;\
#     display 'Mouse: OFF'

# synchronize panes
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'
